services:
  backend:
    build: ./SEBookstoreBackend/
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend-network
    depends_on:
      - mysql
      - kafka
#        condition: service_healthy
  mysql:
    image: "mysql:8"
    environment:
      MYSQL_ROOT_PASSWORD: eWybAgmryUKfu0i
      MYSQL_DATABASE: bookstore
      MYSQL_USER: bookstore
      MYSQL_PASSWORD: bookstore
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "-ubookstore","-pbookstore" ,"status", "-h", "localhost" ]
      timeout: 3s
      retries: 10
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend-network
#    ports:
#      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend-network
  eureka:
    build: ./SEBookstoreEurekaServer
    ports:
      - "8761:8761"
    networks:
      - backend-network
  gateway:
    build: ./SEBookstoreGateway/
    ports:
      - "8080:8080"
    networks:
      - backend-network
    depends_on:
      - eureka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  search-service:
    build: ./SEBookstoreSearchService/
    ports:
      - "8081:8081"
    networks:
      - backend-network
    depends_on:
      - eureka
      - mysql
    environment:
      - SPRING_PROFILES_ACTIVE=docker
networks:
  backend-network:
    driver: bridge
